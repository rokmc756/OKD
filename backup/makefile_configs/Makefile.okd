okd:
	@if [ "${r}" = "install" ]; then\
                if [ ! -z ${r} ] && [ "${s}" = "mgr" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_mgr: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "client" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_client: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "bootstrap" ]; then\
                        ansible-playbook -i ansible-hosts-bootstrap --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_bootstrap: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "master" ]; then\
                        ansible-playbook -i ansible-hosts-master --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_master: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "worker" ]; then\
                        ansible-playbook -i ansible-hosts-worker --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_worker: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "network" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_network: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "dnsmasq" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_dnsmasq: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "resolved" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_resolved: True}' --tags='install';\
                else\
			echo "No Actions for Install OKD";\
                fi;\
	elif [ "${r}" = "uninstall" ]; then\
                if [ ! -z ${r} ] && [ "${s}" = "mgr" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_mgr: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "client" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_client: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "bootstrap" ]; then\
                        ansible-playbook -i ansible-hosts-bootstrap  --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_bootstrap: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "master" ]; then\
                        ansible-playbook -i ansible-hosts-master --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_master: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "worker" ]; then\
                        ansible-playbook -i ansible-hosts-worker --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_worker: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "network" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_network: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "dnsmasq" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_dnsmasq: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "resolved" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_resolved: True}' --tags='uninstall';\
                else\
			echo "No Actions for Uninstall OKD";\
                fi;\
	elif [ "${r}" = "config" ]; then\
                if [ ! -z ${r} ] && [ "${s}" = "back-to-centos" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{back_to_centos: True}' --tags='config';\
                elif [ ! -z ${r} ] && [ "${s}" = "client" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{test: True}' --tags='config';\
                elif [ ! -z ${r} ] && [ "${s}" = "freeipa" ]; then\
                        ansible-playbook -i ansible-hosts-freeipa --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{config_freeipa: True}' --tags='config';\
                else\
			echo "No Actions for Configure OKD";\
                fi;\
	elif [ "${r}" = "remove" ]; then\
                if [ ! -z ${r} ] && [ "${s}" = "back-to-centos" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{back_to_centos: True}' --tags='remove';\
                elif [ ! -z ${r} ] && [ "${s}" = "freeipa" ]; then\
                        ansible-playbook -i ansible-hosts-freeipa --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{remove_freeipa: True}' --tags='remove';\
                else\
			echo "No Actions for Configure OKD";\
                fi;\
	else\
		echo "No Actions for OKD";\
		exit;\
	fi

