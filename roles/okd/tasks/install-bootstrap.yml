---
- name: Install CoreOS Installer Package
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "coreos-installer"


- name: Install Fedora CoreOS Boot Strap to Local NVME Drive
  shell: |
    coreos-installer install /dev/nvme0n1 --ignition-url=http://{{ manager_ipaddr1 }}:8080/bootstrap.ign \
    --insecure-ignition --copy-network
  register: install_coreos_bootstrap_local_drive
- debug: msg={{ install_coreos_bootstrap_local_drive }}
  when: print_debug == true


- name: Copy CoreOS Boot Entry for 1st NVME Disk
  template:
    src: "{{ item }}.j2"
    dest: "/etc/grub.d/{{ item }}"
    owner: root
    group: root
    mode: 0755
  register: copy_coreos_boot_entry
  ignore_errors: yes
  with_items:
    - "40_custom"
- debug: msg={{ copy_coreos_boot_entry }}


- name: Change Default Boot Entry for GRUB2
  lineinfile:
    dest: "{{ item.dest }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  register: change_default_boot_entry
  with_items:
    - { regexp: "^GRUB_DEFAULT=", line: "GRUB_DEFAULT=\"Fedora CoreOS\"", dest: "/etc/default/grub", state: present }
- debug: msg={{ change_default_boot_entry }}
  when: print_debug == true
  # "GRUB_DEFAULT=\"saved\""


- name: Install Fedora CoreOS Boot Strap to Local NVME Drive
  shell: |
    grub2-mkconfig -o /boot/grub2/grub.cfg
  register: install_coreos_local_drive
- debug: msg={{ install_coreos_local_drive }}
  when: print_debug == true


- name: Reboot Required
  shell: ( /bin/sleep 5; /sbin/shutdown -r now "Ansible updates triggered" ) &
  ignore_errors: true
  register: reboot_required
  async: 120
  poll: 0
  notify:
    - Waiting for Server to Come Back after Restart


# After CoreOS Rebooted
#
# The primary services are release-image.service followed by bootkube.service. To watch their status, run e.g.
# journalctl -b -f -u release-image.service -u bootkube.service

- meta: flush_handlers


#
# openshift-install --dir /root/okd4 wait-for bootstrap-complete --log-level=debug
# - name: Wait for Bootstrap Complete
#  shell: |
#    ssh -o StrictHostKeyChecking=no core@192.168.1.182 "journalctl -b -f -u release-image.service -u bootkube.service"
# ssh -o StrictHostKeyChecking=no core@192.168.1.182 "journalctl -b -u release-image.service -u bootkube.service"
# ~~ snip
# Dec 21 03:45:16 localhost.localdomain systemd[1]: Finished release-image.service - Download the OpenShift Release Image.
#
#  register: wait_for_bootstrap_complete
#- debug: msg={{ wait_for_bootstrap_complete }}
#  when: print_debug == true


