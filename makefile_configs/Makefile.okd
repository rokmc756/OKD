okd:
	@if [ "${r}" = "install" ]; then\
                if [ ! -z ${r} ] && [ "${s}" = "mgr" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_mgr: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "client" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_client: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "bootstrap" ]; then\
                        ansible-playbook -i ansible-hosts-bootstrap --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_bootstrap: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "master" ]; then\
                        ansible-playbook -i ansible-hosts-master --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_master: True}' --tags='install';\
                elif [ ! -z ${r} ] && [ "${s}" = "network" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{install_network: True}' --tags='install';\
                else\
			echo "No Actions for Install OKD";\
                fi;\
	elif [ "${r}" = "uninstall" ]; then\
                if [ ! -z ${r} ] && [ "${s}" = "mgr" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_mgr: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "client" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_client: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "bootstrap" ]; then\
                        ansible-playbook -i ansible-hosts-bootstrap  --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_bootstrap: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "master" ]; then\
                        ansible-playbook -i ansible-hosts-master --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_master: True}' --tags='uninstall';\
                elif [ ! -z ${r} ] && [ "${s}" = "network" ]; then\
                        ansible-playbook -i ansible-hosts --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-okd.yml -e '{uninstall_network: True}' --tags='uninstall';\
                else\
			echo "No Actions for Uninstall OKD";\
                fi;\
	else\
		echo "No Actions for OKD";\
		exit;\
	fi


#mgr:
#        @if [ "${r}" = "install" ]; then\
#                if [ ! -z ${r} ] && [ "${s}" = "rbd" ]; then\
#                        ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} config-block.yml -e '{enable_rbd: True}' --tags='install';\
#                elif [ ! -z ${r} ] && [ "${s}" = "iscsi" ]; then\
#                        if [ -z ${c} ];  then\
#                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} config-block.yml -e '{enable_iscsi: True}' --tags='install';\
#                        elif [ ! -z ${c} ] && [ "${c}" = "enable" ]; then\
#                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} config-block.yml -e '{enable_iscsi: True}' -e '{enable_iscsi_client: True }' --tags='install';\
#                        elif [ ! -z ${c} ] && [ "${c}" = "only" ]; then\
#                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} config-block.yml -e '{enable_iscsi_client: True }' --tags='install';\
#                        else\
#                                echo "No Actions for Installing iSCSI with Client";\
#                        fi\
#                else\
#                        echo "No Actions for Installing Block";\
#                fi;\
#        elif [ "${r}" = "uninstall" ]; then\
#                if [ ! -z ${r} ] && [ "${s}" = "rbd" ]; then\
#                        ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} config-block.yml -e '{disable_rbd: True}' --tags='uninstall';\
#                elif [ ! -z ${r} ] && [ "${s}" = "iscsi" ]; then\
#                        if [ -z ${c} ];  then\
#                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} config-block.yml -e '{disable_iscsi: True}' --tags='uninstall';\
#                        elif [ ! -z ${c} ] && [ "${c}" = "disable" ]; then\
#                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} config-block.yml -e '{disable_iscsi: True}' -e '{disable_iscsi_client: True }' --tags='uninstall';\
#                        elif [ ! -z ${c} ] && [ "${c}" = "only" ]; then\
#                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} config-block.yml -e '{disable_iscsi_client: True }' --tags='uninstall';\
#                        else\
#                                echo "No Actions for Installing iSCSI with Client";\
#                        fi\
#                else\
#                        echo "No Actions for Uninstalling Block";\
#                fi;\
#        else\
#                echo "No Actions for Block";\
#                exit;\
#        fi
